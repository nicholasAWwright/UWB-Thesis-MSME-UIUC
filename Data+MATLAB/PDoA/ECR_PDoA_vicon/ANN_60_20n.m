function [Y,Xf,Af] = ANN_60_20n(X,~,~)
%MYNEURALNETWORKFUNCTION neural network simulation function.
%
% Auto-generated by MATLAB, 02-May-2020 00:36:38.
%
% [Y] = myNeuralNetworkFunction(X,~,~) takes these arguments:
%
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = Qx4 matrix, input #1 at timestep ts.
%
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = Qx3 matrix, output #1 at timestep ts.
%
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [-166881;627;-105928;629];
x1_step1.gain = [6.4553820133691e-06;0.000655522779416585;8.43401437999452e-06;0.000655737704918033];
x1_step1.ymin = -1;

% Layer 1
b1 = [2.6589352715904692737;-140.96760663675209457;-92.652943294306211897;-0.71923253505055351198;-6.7373284255341809867;-4.2460946907332601796;-2.081803111250945193;3.1138574599944219834;-0.34096587389181326477;0.1437312773419742451;-0.31644603809881843848;-0.69263890921093840269;-1.8840542840162339822;-2.3694788304045157901;7.6903025582524469073;-2.128021027297865686;0.96121819345962644654;-18.134765995548004724;-11.476794496286284897;2.5119743037073085645];
IW1_1 = [-3.3770079597087034884 -1.5273504839435989577 -0.13437843772409219234 -1.3775640160752111729;-41.595592462701119985 140.72434264811110438 2.4293599493163613445 105.33725281490981729;119.35074898645737562 -9.0541104098726279403 4.7144384296610111207 52.915974893359297937;0.11962913881931735993 0.26863451326817822107 2.6957912148648701667 0.045978973307341998444;2.2313344909431536145 5.7631891731790032551 -0.52808371466857428889 1.4345563103219327594;2.9639195999252279101 -1.9299442923872884847 -3.9380232393240031108 4.5561306080633912075;2.3465775827093913186 2.171498993130120958 0.14525321619077133373 4.303366656236111254;-0.90242616372599304686 2.3623811558552998413 0.51321731815997106985 1.7646707988372558606;2.1165151673957773859 1.2932548719923715463 0.0036867016756457759996 0.8173369765875152515;0.10072350864504676926 0.18699481564474190742 -0.74962102033884892016 0.52827234751556395587;0.71940121137428214571 -1.1158070258742116554 -0.068979743147032479555 -0.61230588996144630354;0.11055806243629646979 0.26110915380528831875 2.7071030308258046126 0.094873145079052520479;-5.5386978565417122056 1.7862279492445698459 0.5725222977376441813 -0.19329523213171234675;-2.884638210685542159 0.93159151300506393145 0.53131591804874656049 0.12968871143746132923;12.412456843829739128 14.340565799429443317 0.38684109668897825873 2.4516021114521948654;-3.2300425402487866755 0.26824197347791722823 -0.33349578098141191562 -0.53831179447494981183;-1.0350615016340423136 -1.2971308850602492058 -0.063106079236283363354 -1.4011431365629043455;-21.727276308860279386 13.017670644081560383 5.8935795806016928466 -3.6172397467407741978;-14.796965148987929695 5.1896794907963492705 3.0534007621680552269 -0.013184004776234891504;3.0785043905544493548 -0.98234133228185671616 -0.54997741944009137516 -0.12362979613286143032];

% Layer 2
b2 = [0.95068523860883014098;-1.3789928615136155532;1.9102588917374692112];
LW2_1 = [0.18815572085698381577 0.043201278329772475895 -0.054614465504147426123 2.2114320557777551457 -0.093666947840914518975 -0.042041303330614621103 -0.039394874369139701309 -0.039347991875428776909 -0.26002742003912188151 0.042226108693539862737 -0.26622536566179250128 -2.2158839860078343165 -0.58539835307235821293 40.333523639706051256 -0.052166621807121650589 0.39632379253016447596 0.0023793831613904497212 -0.062557718446293750225 0.41528252191436615393 39.009355971779392291;0.4430830853626073762 0.058833208125033321922 -0.09563646203147420366 -3.694900586965626843 0.14959506645352113607 -0.02169180617636719613 -0.40987515760159420886 0.30322512342903867877 -0.30904833928215752481 -0.16674683540236773238 -0.3663068966022561268 3.5130818654619466734 0.41121865183924066756 -30.344106661181342588 0.082726186403358187293 -0.59625910488082911609 -1.386052271624608867 0.12676527571151180451 -0.49263391013592355838 -29.655618452981698852;-0.0057492594926211596298 0.02636540252866533679 -0.010456676201271488877 32.00926492987148464 0.10849006742598507613 0.1353882003757267416 0.14369380655268521041 -0.057715430339975490326 -0.11000368606050758835 1.8417075673926639467 0.20124741560993208989 -32.002571275614677404 -0.71396155564876240263 33.339006724357233225 -0.021720547705804043453 0.86586021847817562502 0.25223554531582986771 1.2715653884540245588 -1.3132049207075708885 31.914494440279398191];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = [0.533787165877804;0.788527964418997;2.25106301047751];
y1_step1.xoffset = [-1.82517310309568;0.576613863304083;-0.470200245018933];

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX
    X = {X};
end

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
    Q = size(X{1},1); % samples/series
else
    Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS
    
    % Input 1
    X{1,ts} = X{1,ts}';
    Xp1 = mapminmax_apply(X{1,ts},x1_step1);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = repmat(b2,1,Q) + LW2_1*a1;
    
    % Output 1
    Y{1,ts} = mapminmax_reverse(a2,y1_step1);
    Y{1,ts} = Y{1,ts}';
end

% Final Delay States
Xf = cell(1,0);
Af = cell(2,0);

% Format Output Arguments
if ~isCellX
    Y = cell2mat(Y);
end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
y = bsxfun(@minus,x,settings.xoffset);
y = bsxfun(@times,y,settings.gain);
y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
x = bsxfun(@minus,y,settings.ymin);
x = bsxfun(@rdivide,x,settings.gain);
x = bsxfun(@plus,x,settings.xoffset);
end
