function [Y,Xf,Af] = ANN_60_25n(X,~,~)
%MYNEURALNETWORKFUNCTION neural network simulation function.
%
% Auto-generated by MATLAB, 02-May-2020 00:38:48.
%
% [Y] = myNeuralNetworkFunction(X,~,~) takes these arguments:
%
%   X = 1xTS cell, 1 inputs over TS timesteps
%   Each X{1,ts} = Qx4 matrix, input #1 at timestep ts.
%
% and returns:
%   Y = 1xTS cell of 1 outputs over TS timesteps.
%   Each Y{1,ts} = Qx3 matrix, output #1 at timestep ts.
%
% where Q is number of samples (or series) and TS is the number of timesteps.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [-166881;627;-105928;629];
x1_step1.gain = [6.4553820133691e-06;0.000655522779416585;8.43401437999452e-06;0.000655737704918033];
x1_step1.ymin = -1;

% Layer 1
b1 = [2.33933014747578083;-13.538483001590186916;-3.9774224117774377163;-7.7407811248949585092;9.6121867580643627349;-3.3816812854031961244;3.9951375340443293638;-0.75235329664789107884;29.330098580254016838;0.20902740927662921688;3.7653647088802841836;0.45860911350566246902;-0.01088095652408077596;4.7967054950992187301;1.2465536975082869287;0.038056307582588100313;0.88102900933432692909;13.803007322472119256;0.96400047763155483072;9.3405489977727782502;4.7222845715646988296;1.4917475452114004053;-1.2991167112069277323;-1.3347850320567744564;14.417152640862678226];
IW1_1 = [-0.97469881349512033086 0.68657785284830130657 0.53904616479752676117 2.2612365005804484497;12.687240946842420541 -10.192583016420226016 3.1851887449405893449 0.097279429793689906059;9.0086679071667230545 0.16630296271193634183 0.55207931122994191586 1.5649762360275696338;7.4912202205705860081 -0.7120156540220460295 -5.9648346426857274949 1.7362470916360221995;-12.603472595344221929 6.8144301199454790918 -1.9763570255039712986 -4.205933106023319823;7.7832033617829843308 0.15230826853586376668 0.48225300782564128887 1.3505106300338818315;-1.6011476266565352056 -2.7077150069367323937 0.53227336515860290689 -6.096322884673430309;-0.31879082623624532822 -0.56002421985600236987 -2.4734123220057120385 1.2115549237401104232;-38.340573786420776514 5.0432391692636517888 -1.9270624097143826958 -18.125296153565976454;-1.8166613307839607483 0.94867583816069656066 1.263061229838170485 0.68177248739290319257;-1.5638204978059586647 -2.4859177161476533335 0.5606666451858476341 -5.753459989479550174;-0.20426805077576992709 0.38583739494279561955 -3.2907546192806549357 -1.2198625219270129438;1.131892480345462193 0.12544113803938472529 0.43610007847656229174 -0.17800029078063550614;-10.711875441753917926 -0.16972758140279747829 -0.65340256221432546635 -1.8929082675839836725;8.5864832209629966542 39.910852829765595118 17.86627085940580173 -1.2237509991598365389;0.70501493207415555364 0.57965556134383611209 -0.59777978237525852823 1.4763459537160144031;0.57035048126737553087 -0.016924013726080284342 -0.35448115288399129064 -0.35268027471384177929;17.134290644795182601 -6.5981339614787559711 -4.5028940878688565874 -0.1411887330564822185;1.642914949514328482 0.011275105771244704062 0.090501436639697271924 0.49337243952553139215;11.861359185029035856 -2.8395320983768415068 -2.7989849552226693241 -1.3750335007791949504;-2.0498242605225427404 -1.6592239575259617457 1.1602701667868440261 -2.7184245622832428069;1.8908900275222768617 0.72123992231388212026 -0.3881948107821092675 -0.1063245636908502767;0.84964726903415777048 0.18756244959194859345 -0.49839881182568862572 -0.46463872672911454842;0.64642271187089961337 0.14168796877935746492 -0.32154802685084693525 -0.27283248525296416309;17.725346861737637738 -7.2549783409727197636 -4.770771389465513046 0.089098175162392254101];

% Layer 2
b2 = [7.4747899805303354981;1.4818860086031957479;5.0700717686298615305];
LW2_1 = [-0.11737930636610391377 0.14167726171195829665 15.842181931223233704 -0.04872340951798398434 0.028420722222763462883 -9.1343370767430851487 -1.0059321681066264453 0.11715497737024492542 0.13382821528840996295 -0.038731534177803825236 1.088033225207012844 0.035915447079221791971 0.051498243186391151616 7.0519381863613981309 -0.014302205234811621662 -0.15463931054564697409 -3.2054824878951753142 -2.5043788242929969634 -0.65114593144462029617 0.65452537095918206234 0.1371546038216517327 0.48887513011728855883 -5.5810023673401953914 12.03838568070863424 1.9454108823572493492;0.28913169183370834858 0.18028840372524845836 3.9094766737944550705 -0.045501427435656591203 0.11121696808948954016 -2.0812745316227871939 1.9712023258849331597 -0.24831418804786042909 0.1661872632927014759 0.23218802597371523966 -2.1673022518171580764 0.0037384690014726899322 -0.64781923269558261413 1.9485134592195054726 0.026928518818124191903 0.36290648311251411107 0.44549501656773082825 3.3312400756271673963 0.24940056961421833148 -0.66384557768537322264 -0.36602237717481500567 0.52668055210629072249 -2.154066774441125709 4.8936151913371643829 -2.7040542466055770277;0.081116657812510942205 0.019192437797520101733 12.579496081675511476 -0.12312242937890810479 -0.090983634740234783922 -8.0298243249160048407 -2.8128788506498421107 1.2930192746024935513 0.027647657678607391596 -0.047583373248031850256 2.893229780425714992 0.90427352934411886487 2.6003255029649703367 4.9641575150824852614 0.027182995938489815102 -0.097015006598910741298 -3.0144107521849292652 7.2401257390659843338 -1.7379691304429407683 0.8956135138408367613 0.03459086990301521447 0.43419164931028347842 -3.6939635428359487435 6.6481140586830136385 -7.8773803793605123857];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = [0.533787165877804;0.788527964418997;2.25106301047751];
y1_step1.xoffset = [-1.82517310309568;0.576613863304083;-0.470200245018933];

% ===== SIMULATION ========

% Format Input Arguments
isCellX = iscell(X);
if ~isCellX
    X = {X};
end

% Dimensions
TS = size(X,2); % timesteps
if ~isempty(X)
    Q = size(X{1},1); % samples/series
else
    Q = 0;
end

% Allocate Outputs
Y = cell(1,TS);

% Time loop
for ts=1:TS
    
    % Input 1
    X{1,ts} = X{1,ts}';
    Xp1 = mapminmax_apply(X{1,ts},x1_step1);
    
    % Layer 1
    a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*Xp1);
    
    % Layer 2
    a2 = repmat(b2,1,Q) + LW2_1*a1;
    
    % Output 1
    Y{1,ts} = mapminmax_reverse(a2,y1_step1);
    Y{1,ts} = Y{1,ts}';
end

% Final Delay States
Xf = cell(1,0);
Af = cell(2,0);

% Format Output Arguments
if ~isCellX
    Y = cell2mat(Y);
end
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
y = bsxfun(@minus,x,settings.xoffset);
y = bsxfun(@times,y,settings.gain);
y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
x = bsxfun(@minus,y,settings.ymin);
x = bsxfun(@rdivide,x,settings.gain);
x = bsxfun(@plus,x,settings.xoffset);
end
